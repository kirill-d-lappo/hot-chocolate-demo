<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup>
    <OutputType>Exe</OutputType>
    <!--    <PublishAot>true</PublishAot>-->
    <!--    <StaticallyLinked>true</StaticallyLinked>-->

    <!--    <InvariantGlobalization>true</InvariantGlobalization>-->
    <!--    <StripSymbols>false</StripSymbols>-->
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="ApolloGraphQL.HotChocolate.Federation" />
    <PackageReference Include="FluentValidation" />
    <PackageReference Include="FluentValidation.DependencyInjectionExtensions" />
    <PackageReference Include="HotChocolate.ApolloFederation" />
    <PackageReference Include="HotChocolate.AspNetCore" />
    <PackageReference Include="HotChocolate.AspNetCore.CommandLine" />
    <PackageReference Include="HotChocolate.Data" />
    <PackageReference Include="HotChocolate.Data.EntityFramework" />
    <PackageReference Include="HotChocolate.Diagnostics" />
    <PackageReference Include="HotChocolate.Types.Analyzers">
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
      <PrivateAssets>all</PrivateAssets>
    </PackageReference>
    <PackageReference Include="HotChocolate.Types.Sorting" />
    <PackageReference Include="Microsoft.EntityFrameworkCore.Design">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    <PackageReference Include="Serilog" />
    <PackageReference Include="Serilog.AspNetCore" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\HotChocolateDemo.Services\HotChocolateDemo.Services.csproj" />
    <ProjectReference Include="..\HotChocolateDemo.Persistence\HotChocolateDemo.Persistence.csproj" />
  </ItemGroup>

  <Target Name="UpdateGraphqlSchemaTarget" AfterTargets="PostBuildEvent" Condition="$(GQLUpdateSchema) != false">
    <PropertyGroup>
      <GQLGenBinaryExtension Condition=" '$(OS)' == 'Windows_NT' ">.exe</GQLGenBinaryExtension>
      <GQLGenSchemaPath Condition=" '$(GQLSchemaPath)' == '' ">$(MSBuildProjectDirectory)\schema.graphql</GQLGenSchemaPath>
      <GQLGenBinaryPath Condition=" '$(GQLGenBinaryPath)' == '' ">$(OutputPath)$(AssemblyName)$(GQLGenBinaryExtension)</GQLGenBinaryPath>
      <GQLGenCommand Condition=" '$(GQLGenCommand)' == '' ">"$(GQLGenBinaryPath)" schema export --output "$(GQLGenSchemaPath)"</GQLGenCommand>
    </PropertyGroup>

    <Message Text="Publishing GraphQL Schema to '$(GQLGenSchemaPath)'" Importance="high" />
    <Exec IgnoreExitCode="true" ConsoleToMSBuild="true" Command="$(GQLGenCommand)">
      <Output TaskParameter="ConsoleOutput" PropertyName="GQLGenOutput" />
      <Output TaskParameter="ExitCode" PropertyName="GQLGenExitCode" />
    </Exec>

    <!-- Note [2024-10-01 klappo] weak check-->
    <!-- Note [2024-10-01 klappo] RunWithGraphQLCommandsAsync from HotChocolate returns 0 exit code even when exception -->
    <PropertyGroup>
      <GQLGenHasError Condition="$(GQLGenOutput.Contains('exception'))">true</GQLGenHasError>
    </PropertyGroup>

    <Message Text="GQLGEN: GQLGenExitCode: $(GQLGenExitCode)" Importance="normal" />
    <Message Text="GQLGEN: GQLGenHasError: $(GQLGenHasError)" Importance="normal" />

    <Error Text="Error at generating GraphQL schema, check build logs" Code="$(GQLGenHasError)" Condition=" '$(GQLGenHasError)' != '' " />
  </Target>

</Project>
